import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

import 'FormulaProvider.dart';

/// Provider ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô CardTest
class CardTestProvider extends ChangeNotifier {
  FormulaProvider? _formulaProvider;

  /// ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô provider
  void initialize(BuildContext context) {
    _formulaProvider = Provider.of<FormulaProvider>(context, listen: false);
    debugPrint('‚úÖ [CardTestProvider] Initialized');
  }

  /// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏î‡∏ó‡∏µ‡πà card ‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• formula ‡∏ô‡∏±‡πâ‡∏ô‡πÜ
  Future<void> onCardTapped(Map<String, dynamic> formula) async {
    if (_formulaProvider == null) return;

    try {
      debugPrint('üéØ Card tapped: ${formula.formulaName}');
      debugPrint('=== PRINTING ${formula.formulaName.toUpperCase()} DATA ===');

      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å table
      final tableName = formula.tableName;
      final tableData = await _formulaProvider!.getTableData(tableName);
      final columns = await _formulaProvider!.getTableColumns(tableName);

      debugPrint(
        'üìä Found ${tableData.length} records with ${columns.length} columns',
      );
      debugPrint('');

      // ‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      if (tableData.isEmpty) {
        debugPrint('üìù No data found');
      } else {
        // ‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏Å‡πà‡∏≠‡∏ô
        for (int i = 0; i < tableData.length; i++) {
          final record = tableData[i];
          debugPrint('Record ${i + 1}:');

          for (final column in columns) {
            debugPrint('  $column: ${record[column]}');
          }
          debugPrint('');
        }

        // ‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡πÅ‡∏ö‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        debugPrint('=== TABLE FORMAT ===');
        _printTable(tableData, columns);
      }

      debugPrint('‚úÖ Finished printing ${formula.formulaName} data');
      debugPrint('');
    } catch (e) {
      debugPrint('‚ùå Error: $e');
    }
  }

  /// ‡∏õ‡∏£‡∏¥‡πâ‡∏ô‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏™‡∏ß‡∏¢‡πÜ
  void _printTable(List<Map<String, dynamic>> tableData, List<String> columns) {
    if (tableData.isEmpty) return;

    // ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞ column
    const int maxWidth = 20;
    Map<String, int> columnWidths = {};

    // ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°
    for (String column in columns) {
      int maxLength = column.length;

      for (var record in tableData) {
        String value = record[column]?.toString() ?? '';
        if (value.length > maxLength) {
          maxLength = value.length;
        }
      }

      // ‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏ß‡πâ‡∏≤‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô maxWidth
      columnWidths[column] = maxLength > maxWidth ? maxWidth : maxLength;
    }

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á header
    String header = '| ';
    for (String column in columns) {
      int width = columnWidths[column]!;
      String displayColumn =
          column.length > width
              ? '${column.substring(0, width - 3)}...'
              : column;
      header += '${displayColumn.padRight(width)} | ';
    }
    debugPrint(header);

    // ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÄ‡∏™‡πâ‡∏ô‡πÅ‡∏ö‡πà‡∏á
    String separator = '|';
    for (String column in columns) {
      int width = columnWidths[column]!;
      separator += '${'‚îÄ' * (width + 2)}|';
    }
    debugPrint(separator);

    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß
    for (int i = 0; i < tableData.length; i++) {
      var record = tableData[i];
      String row = '| ';

      for (String column in columns) {
        int width = columnWidths[column]!;
        String value = record[column]?.toString() ?? '';

        String displayValue;
        if (value.length > width) {
          displayValue = '${value.substring(0, width - 3)}...';
        } else {
          displayValue = value;
        }

        row += '${displayValue.padRight(width)} | ';
      }
      debugPrint(row);
    }

    // ‡∏õ‡∏¥‡∏î‡∏ï‡∏≤‡∏£‡∏≤‡∏á
    debugPrint(separator);
    debugPrint('üìä Total records: ${tableData.length}');
  }
}
